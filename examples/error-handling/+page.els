<script>
  import { onMount } from 'elysium-js';
  
  // Example state
  const [errorType, setErrorType] = useState('badRequest');
  
  // Function to trigger errors
  function triggerError() {
    fetch(`/api/examples/error/${errorType}`)
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => {
            throw err;
          });
        }
        return response.json();
      })
      .then(data => {
        console.log('Success:', data);
      })
      .catch(error => {
        console.error('Error:', error);
        document.getElementById('error-result').innerHTML = `
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
            <p class="font-bold">${error.error} (${error.statusCode})</p>
            <p>${error.message}</p>
          </div>
        `;
      });
  }
  
  onMount(() => {
    console.log('Error handling example mounted');
  });
</script>

<div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold mb-4">Error Handling Example</h1>
  
  <div class="mb-6">
    <p class="mb-4">
      This example demonstrates Elysium.js error handling. Select an error type and click the button to trigger it.
    </p>
    
    <div class="mb-4">
      <label class="block text-gray-700 mb-2">Select Error Type:</label>
      <select 
        id="error-type" 
        class="border rounded px-3 py-2 w-full max-w-md"
        onchange="setErrorType(this.value)"
      >
        <option value="badRequest">Bad Request (400)</option>
        <option value="unauthorized">Unauthorized (401)</option>
        <option value="forbidden">Forbidden (403)</option>
        <option value="notFound">Not Found (404)</option>
        <option value="conflict">Conflict (409)</option>
        <option value="serverError">Internal Server Error (500)</option>
      </select>
    </div>
    
    <button 
      class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
      onclick="triggerError()"
    >
      Trigger Error
    </button>
  </div>
  
  <div id="error-result" class="mt-6"></div>
  
  <div class="mt-8 bg-gray-100 p-4 rounded">
    <h2 class="text-xl font-bold mb-2">How to Use Errors in Elysium.js</h2>
    
    <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto">
import { Elysia } from 'elysia';
import { error } from 'elysium-js';

export default (app: Elysia) =>
  app.get('/api/users/:id', ({ params }) => {
    // Validate input
    if (!params.id) {
      throw error.BadRequest('User ID is required');
    }
    
    // Check authorization
    if (!isAuthenticated()) {
      throw error.Unauthorized('Please login to access this resource');
    }
    
    // Check if user exists
    const user = findUser(params.id);
    if (!user) {
      throw error.NotFound(`User with ID ${params.id} not found`);
    }
    
    return user;
  });
    </pre>
  </div>
</div>
